#include <Servo.h> 
//The above line of code calls a servo library
// Declares there is a servo and names it TryServo 
Servo TryServo; 

int pulsePin = 7; //OUT on color sensor goes to pin 7
int prescale0Pin = 3; //S0 on sensor goes to Arduino pin 3
int prescale1Pin = 4; //S1 on color sensor goes to Arduino pin 4
int colorSelect0pin = 5; //S2 on color sensor goes to Arduino pin 5
int colorSelect1pin = 6; //S3 on color sensor goes to Arduino pin 6

void setup() 
{

// The pin to control the Servo is pin 12 in this example
TryServo.attach(12);
}

int colorSensor();
{
pinMode(prescale0Pin, OUTPUT); //set max prescale
pinMode(prescale1Pin, OUTPUT); // colorSelect1pin is S1 on sensor
digitalWrite(prescale0Pin,HIGH);
digitalWrite(prescale1Pin, HIGH);
pinMode(colorSelect0pin,OUTPUT);
pinMode(colorSelect1pin,OUTPUT);
pinMode(pulsePin,INPUT);

Serial.begin(9600); //9600 in the code below is a baud rate and governs the rate of information exchange
 
Serial.println("Color Reader"); // This line just shows up on the serial monitor
pinMode(10,OUTPUT); //add an LED with a series resistor on pin 10 to light when the light sensor is reading

//add set up pin information here for servos for final project
}



int bottomServo(color);
{
if blahsblash
}





void loop() 
{

int colorSensor(); 
{

//For the final project the servo code to move marble from hopper to light sensor goes here

digitalWrite(10,HIGH); // The next line turns on the LED on pin 10 and signals the color sensor is being read

//the functions to read for each color are being called below
long red=readRed();
long green=readGreen();
long blue = readBlue();
long white=readWhite();


if ((red<green)&&(red<blue))
{
Serial.println("RED"); //Serial.println("Measured value");
Serial.println(red) //Serial.println(red);
Serial.println(blue) //Serial.println(blue);
Serial.println(green) //Serial.println(green);
Serial.println(white) //Serial.println(white);
}

if((green < red) && (green < blue))
{
Serial.println("GREEN");
Serial.println(red);
Serial.println(blue);
Serial.println(green);
Serial.println(white);
}

if ((blue < green) && (blue < red) && (red > 100))
{
Serial.println("BLUE");
Serial.println(red);
Serial.println(blue);
Serial.println(green);
Serial.println(white);
}

if ((white<40) && (green<40 )&& (red<40))
{
Serial.println("WHITE");
Serial.println(red);
Serial.println(blue);
Serial.println(green);
Serial.println(white);
}

digitalWrite(10,LOW); //this line turns off the LED
delay(1000);

//for your final project code to direct the marble to its proper color bin goes here
//this is the end of the loop
}


long readRed()
{
return (readColor(LOW,LOW));
}
long readGreen()
{
return(readColor(HIGH,HIGH));
}
long readBlue()
{
return(readColor(LOW,HIGH));
}
long readWhite()
{
return(readColor(HIGH,LOW));
}
long readColor(int bit0, int bit1)
{
digitalWrite(colorSelect0pin, bit0);
digitalWrite(colorSelect1pin, bit1);
long start = millis(); //millis is a time this is measuring time to read in from the pulsePin 
for (int i = 0; i <1000; i++)
{
pulseIn(pulsePin,HIGH);
}
return (millis()-start)
}




// angles defined for positioning in this example are 90, 180 and 0 degrees
TryServo.write(90);
delay(1000);
TryServo.write(180);
delay(1000);
TryServo.write(90);
delay(1000);
TryServo.write(0);
delay(1000);
TryServo.write(90);
delay(1000);
}

